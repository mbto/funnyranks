/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks_stats.tables.records;


import com.github.mbto.funnyranks.common.model.funnyranks_stats.tables.PlayerSteamid;

import java.time.LocalDateTime;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerSteamidRecord extends UpdatableRecordImpl<PlayerSteamidRecord> implements Record6<UInteger, UInteger, Long, String, String, LocalDateTime> {

    private static final long serialVersionUID = -1777499004;

    /**
     * Setter for <code>funnyranks_stats.player_steamid.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>funnyranks_stats.player_steamid.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>funnyranks_stats.player_steamid.player_id</code>.
     */
    public void setPlayerId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>funnyranks_stats.player_steamid.player_id</code>.
     */
    @NotNull
    public UInteger getPlayerId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>funnyranks_stats.player_steamid.steamid64</code>.
     */
    public void setSteamid64(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>funnyranks_stats.player_steamid.steamid64</code>.
     */
    @NotNull
    public Long getSteamid64() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>funnyranks_stats.player_steamid.steamid2</code>. Auto-generated SteamID format v2 - STEAM_0:X:YYYYYYYYYY - https://developer.valvesoftware.com/wiki/SteamID
     */
    public void setSteamid2(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>funnyranks_stats.player_steamid.steamid2</code>. Auto-generated SteamID format v2 - STEAM_0:X:YYYYYYYYYY - https://developer.valvesoftware.com/wiki/SteamID
     */
    @Size(max = 20)
    public String getSteamid2() {
        return (String) get(3);
    }

    /**
     * Setter for <code>funnyranks_stats.player_steamid.steamid3</code>. Auto-generated SteamID format v3 - [U:X:YYYYYYYYYY] - https://developer.valvesoftware.com/wiki/SteamID
     */
    public void setSteamid3(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>funnyranks_stats.player_steamid.steamid3</code>. Auto-generated SteamID format v3 - [U:X:YYYYYYYYYY] - https://developer.valvesoftware.com/wiki/SteamID
     */
    @Size(max = 20)
    public String getSteamid3() {
        return (String) get(4);
    }

    /**
     * Setter for <code>funnyranks_stats.player_steamid.reg_datetime</code>.
     */
    public void setRegDatetime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>funnyranks_stats.player_steamid.reg_datetime</code>.
     */
    public LocalDateTime getRegDatetime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<UInteger, UInteger, Long, String, String, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<UInteger, UInteger, Long, String, String, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return PlayerSteamid.PLAYER_STEAMID.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return PlayerSteamid.PLAYER_STEAMID.PLAYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return PlayerSteamid.PLAYER_STEAMID.STEAMID64;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return PlayerSteamid.PLAYER_STEAMID.STEAMID2;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return PlayerSteamid.PLAYER_STEAMID.STEAMID3;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field6() {
        return PlayerSteamid.PLAYER_STEAMID.REG_DATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component3() {
        return getSteamid64();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSteamid2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getSteamid3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component6() {
        return getRegDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getSteamid64();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSteamid2();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getSteamid3();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value6() {
        return getRegDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerSteamidRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerSteamidRecord value2(UInteger value) {
        setPlayerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerSteamidRecord value3(Long value) {
        setSteamid64(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerSteamidRecord value4(String value) {
        setSteamid2(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerSteamidRecord value5(String value) {
        setSteamid3(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerSteamidRecord value6(LocalDateTime value) {
        setRegDatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PlayerSteamidRecord values(UInteger value1, UInteger value2, Long value3, String value4, String value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlayerSteamidRecord
     */
    public PlayerSteamidRecord() {
        super(PlayerSteamid.PLAYER_STEAMID);
    }

    /**
     * Create a detached, initialised PlayerSteamidRecord
     */
    public PlayerSteamidRecord(UInteger id, UInteger playerId, Long steamid64, String steamid2, String steamid3, LocalDateTime regDatetime) {
        super(PlayerSteamid.PLAYER_STEAMID);

        set(0, id);
        set(1, playerId);
        set(2, steamid64);
        set(3, steamid2);
        set(4, steamid3);
        set(5, regDatetime);
    }
}
