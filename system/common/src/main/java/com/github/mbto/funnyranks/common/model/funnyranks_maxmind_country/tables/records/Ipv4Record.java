/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks_maxmind_country.tables.records;


import com.github.mbto.funnyranks.common.model.funnyranks_maxmind_country.tables.Ipv4;

import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ipv4Record extends TableRecordImpl<Ipv4Record> implements Record3<UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = -1167852139;

    /**
     * Setter for <code>funnyranks_maxmind_country.ipv4.start_int</code>.
     */
    public void setStartInt(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>funnyranks_maxmind_country.ipv4.start_int</code>.
     */
    @NotNull
    public UInteger getStartInt() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>funnyranks_maxmind_country.ipv4.last_int</code>.
     */
    public void setLastInt(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>funnyranks_maxmind_country.ipv4.last_int</code>.
     */
    @NotNull
    public UInteger getLastInt() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>funnyranks_maxmind_country.ipv4.v_geoname_id</code>. One of valid geoname_id (from ipblocks_priority_geonameId_groupNames setting)
     */
    public void setVGeonameId(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>funnyranks_maxmind_country.ipv4.v_geoname_id</code>. One of valid geoname_id (from ipblocks_priority_geonameId_groupNames setting)
     */
    @NotNull
    public UInteger getVGeonameId() {
        return (UInteger) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, UInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<UInteger, UInteger, UInteger> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Ipv4.IPV4.START_INT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Ipv4.IPV4.LAST_INT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return Ipv4.IPV4.V_GEONAME_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getStartInt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getLastInt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component3() {
        return getVGeonameId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getStartInt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getLastInt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getVGeonameId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ipv4Record value1(UInteger value) {
        setStartInt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ipv4Record value2(UInteger value) {
        setLastInt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ipv4Record value3(UInteger value) {
        setVGeonameId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Ipv4Record values(UInteger value1, UInteger value2, UInteger value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached Ipv4Record
     */
    public Ipv4Record() {
        super(Ipv4.IPV4);
    }

    /**
     * Create a detached, initialised Ipv4Record
     */
    public Ipv4Record(UInteger startInt, UInteger lastInt, UInteger vGeonameId) {
        super(Ipv4.IPV4);

        set(0, startInt);
        set(1, lastInt);
        set(2, vGeonameId);
    }
}
