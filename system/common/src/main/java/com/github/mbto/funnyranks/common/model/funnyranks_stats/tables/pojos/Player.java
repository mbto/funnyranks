/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks_stats.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.validation.constraints.Size;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Player implements Serializable {

    private static final long serialVersionUID = 1739200384;

    private UInteger      id;
    private UInteger      kills;
    private UInteger      deaths;
    private UInteger      timeSecs;
    private UInteger      rankId;
    private LocalDateTime lastseenDatetime;
    private String        lastServerName;

    public Player() {}

    public Player(Player value) {
        this.id = value.id;
        this.kills = value.kills;
        this.deaths = value.deaths;
        this.timeSecs = value.timeSecs;
        this.rankId = value.rankId;
        this.lastseenDatetime = value.lastseenDatetime;
        this.lastServerName = value.lastServerName;
    }

    public Player(
        UInteger      id,
        UInteger      kills,
        UInteger      deaths,
        UInteger      timeSecs,
        UInteger      rankId,
        LocalDateTime lastseenDatetime,
        String        lastServerName
    ) {
        this.id = id;
        this.kills = kills;
        this.deaths = deaths;
        this.timeSecs = timeSecs;
        this.rankId = rankId;
        this.lastseenDatetime = lastseenDatetime;
        this.lastServerName = lastServerName;
    }

    public UInteger getId() {
        return this.id;
    }

    public void setId(UInteger id) {
        this.id = id;
    }

    public UInteger getKills() {
        return this.kills;
    }

    public void setKills(UInteger kills) {
        this.kills = kills;
    }

    public UInteger getDeaths() {
        return this.deaths;
    }

    public void setDeaths(UInteger deaths) {
        this.deaths = deaths;
    }

    public UInteger getTimeSecs() {
        return this.timeSecs;
    }

    public void setTimeSecs(UInteger timeSecs) {
        this.timeSecs = timeSecs;
    }

    public UInteger getRankId() {
        return this.rankId;
    }

    public void setRankId(UInteger rankId) {
        this.rankId = rankId;
    }

    public LocalDateTime getLastseenDatetime() {
        return this.lastseenDatetime;
    }

    public void setLastseenDatetime(LocalDateTime lastseenDatetime) {
        this.lastseenDatetime = lastseenDatetime;
    }

    @Size(max = 31)
    public String getLastServerName() {
        return this.lastServerName;
    }

    public void setLastServerName(String lastServerName) {
        this.lastServerName = lastServerName;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Player other = (Player) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (kills == null) {
            if (other.kills != null)
                return false;
        }
        else if (!kills.equals(other.kills))
            return false;
        if (deaths == null) {
            if (other.deaths != null)
                return false;
        }
        else if (!deaths.equals(other.deaths))
            return false;
        if (timeSecs == null) {
            if (other.timeSecs != null)
                return false;
        }
        else if (!timeSecs.equals(other.timeSecs))
            return false;
        if (rankId == null) {
            if (other.rankId != null)
                return false;
        }
        else if (!rankId.equals(other.rankId))
            return false;
        if (lastseenDatetime == null) {
            if (other.lastseenDatetime != null)
                return false;
        }
        else if (!lastseenDatetime.equals(other.lastseenDatetime))
            return false;
        if (lastServerName == null) {
            if (other.lastServerName != null)
                return false;
        }
        else if (!lastServerName.equals(other.lastServerName))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.kills == null) ? 0 : this.kills.hashCode());
        result = prime * result + ((this.deaths == null) ? 0 : this.deaths.hashCode());
        result = prime * result + ((this.timeSecs == null) ? 0 : this.timeSecs.hashCode());
        result = prime * result + ((this.rankId == null) ? 0 : this.rankId.hashCode());
        result = prime * result + ((this.lastseenDatetime == null) ? 0 : this.lastseenDatetime.hashCode());
        result = prime * result + ((this.lastServerName == null) ? 0 : this.lastServerName.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Player (");

        sb.append(id);
        sb.append(", ").append(kills);
        sb.append(", ").append(deaths);
        sb.append(", ").append(timeSecs);
        sb.append(", ").append(rankId);
        sb.append(", ").append(lastseenDatetime);
        sb.append(", ").append(lastServerName);

        sb.append(")");
        return sb.toString();
    }
}
