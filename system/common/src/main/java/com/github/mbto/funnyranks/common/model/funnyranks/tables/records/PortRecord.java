/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks.tables.records;


import com.github.mbto.funnyranks.common.model.funnyranks.tables.Port;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PortRecord extends UpdatableRecordImpl<PortRecord> implements Record10<UInteger, UInteger, UInteger, UInteger, UShort, String, Boolean, Boolean, Boolean, Boolean> {

    private static final long serialVersionUID = 1130997558;

    /**
     * Setter for <code>funnyranks.port.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>funnyranks.port.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>funnyranks.port.broker_id</code>.
     */
    public void setBrokerId(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>funnyranks.port.broker_id</code>.
     */
    @NotNull
    public UInteger getBrokerId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>funnyranks.port.project_id</code>.
     */
    public void setProjectId(UInteger value) {
        set(2, value);
    }

    /**
     * Getter for <code>funnyranks.port.project_id</code>.
     */
    @NotNull
    public UInteger getProjectId() {
        return (UInteger) get(2);
    }

    /**
     * Setter for <code>funnyranks.port.game_app_id</code>.
     */
    public void setGameAppId(UInteger value) {
        set(3, value);
    }

    /**
     * Getter for <code>funnyranks.port.game_app_id</code>.
     */
    @NotNull
    public UInteger getGameAppId() {
        return (UInteger) get(3);
    }

    /**
     * Setter for <code>funnyranks.port.value</code>. Local port of game server from which logs will be received
     */
    public void setValue(UShort value) {
        set(4, value);
    }

    /**
     * Getter for <code>funnyranks.port.value</code>. Local port of game server from which logs will be received
     */
    @NotNull
    public UShort getValue() {
        return (UShort) get(4);
    }

    /**
     * Setter for <code>funnyranks.port.name</code>.
     */
    public void setName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>funnyranks.port.name</code>.
     */
    @NotNull
    @Size(max = 31)
    public String getName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>funnyranks.port.active</code>. Should receive packets from this port?: 1-receive; 0-UDP packets from this port will be ignored
     */
    public void setActive(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>funnyranks.port.active</code>. Should receive packets from this port?: 1-receive; 0-UDP packets from this port will be ignored
     */
    public Boolean getActive() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>funnyranks.port.ffa</code>. game server is FREE-FOR-ALL mode (Example: CS-DeathMatch): 1-true; 0-false
     */
    public void setFfa(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>funnyranks.port.ffa</code>. game server is FREE-FOR-ALL mode (Example: CS-DeathMatch): 1-true; 0-false
     */
    public Boolean getFfa() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>funnyranks.port.ignore_bots</code>. 1-ignore statistics, when killer or victim is BOT; 0-don't ignore (include all player's)
     */
    public void setIgnoreBots(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>funnyranks.port.ignore_bots</code>. 1-ignore statistics, when killer or victim is BOT; 0-don't ignore (include all player's)
     */
    public Boolean getIgnoreBots() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>funnyranks.port.start_session_on_action</code>. 1-start player's session on event "... killed ... with ..." (not for kreedz servers); 0-start player's session on event "... connected, address ..." or "... entered the game"
     */
    public void setStartSessionOnAction(Boolean value) {
        set(9, value);
    }

    /**
     * Getter for <code>funnyranks.port.start_session_on_action</code>. 1-start player's session on event "... killed ... with ..." (not for kreedz servers); 0-start player's session on event "... connected, address ..." or "... entered the game"
     */
    public Boolean getStartSessionOnAction() {
        return (Boolean) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<UInteger, UInteger, UInteger, UInteger, UShort, String, Boolean, Boolean, Boolean, Boolean> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<UInteger, UInteger, UInteger, UInteger, UShort, String, Boolean, Boolean, Boolean, Boolean> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Port.PORT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field2() {
        return Port.PORT.BROKER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field3() {
        return Port.PORT.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field4() {
        return Port.PORT.GAME_APP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UShort> field5() {
        return Port.PORT.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Port.PORT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field7() {
        return Port.PORT.ACTIVE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field8() {
        return Port.PORT.FFA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field9() {
        return Port.PORT.IGNORE_BOTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Boolean> field10() {
        return Port.PORT.START_SESSION_ON_ACTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component2() {
        return getBrokerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component3() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component4() {
        return getGameAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UShort component5() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component7() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component8() {
        return getFfa();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component9() {
        return getIgnoreBots();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean component10() {
        return getStartSessionOnAction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value2() {
        return getBrokerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value3() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value4() {
        return getGameAppId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UShort value5() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value7() {
        return getActive();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value8() {
        return getFfa();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value9() {
        return getIgnoreBots();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Boolean value10() {
        return getStartSessionOnAction();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value2(UInteger value) {
        setBrokerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value3(UInteger value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value4(UInteger value) {
        setGameAppId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value5(UShort value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value6(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value7(Boolean value) {
        setActive(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value8(Boolean value) {
        setFfa(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value9(Boolean value) {
        setIgnoreBots(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord value10(Boolean value) {
        setStartSessionOnAction(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PortRecord values(UInteger value1, UInteger value2, UInteger value3, UInteger value4, UShort value5, String value6, Boolean value7, Boolean value8, Boolean value9, Boolean value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PortRecord
     */
    public PortRecord() {
        super(Port.PORT);
    }

    /**
     * Create a detached, initialised PortRecord
     */
    public PortRecord(UInteger id, UInteger brokerId, UInteger projectId, UInteger gameAppId, UShort value, String name, Boolean active, Boolean ffa, Boolean ignoreBots, Boolean startSessionOnAction) {
        super(Port.PORT);

        set(0, id);
        set(1, brokerId);
        set(2, projectId);
        set(3, gameAppId);
        set(4, value);
        set(5, name);
        set(6, active);
        set(7, ffa);
        set(8, ignoreBots);
        set(9, startSessionOnAction);
    }
}
