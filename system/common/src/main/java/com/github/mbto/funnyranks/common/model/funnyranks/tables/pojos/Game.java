/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks.tables.pojos;


import java.io.Serializable;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.types.UInteger;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Game implements Serializable {

    private static final long serialVersionUID = 1507722283;

    private UInteger appId;
    private String   name;
    private UShort   listenerPort;

    public Game() {}

    public Game(Game value) {
        this.appId = value.appId;
        this.name = value.name;
        this.listenerPort = value.listenerPort;
    }

    public Game(
        UInteger appId,
        String   name,
        UShort   listenerPort
    ) {
        this.appId = appId;
        this.name = name;
        this.listenerPort = listenerPort;
    }

    @NotNull
    public UInteger getAppId() {
        return this.appId;
    }

    public void setAppId(UInteger appId) {
        this.appId = appId;
    }

    @NotNull
    @Size(max = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @NotNull
    public UShort getListenerPort() {
        return this.listenerPort;
    }

    public void setListenerPort(UShort listenerPort) {
        this.listenerPort = listenerPort;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Game other = (Game) obj;
        if (appId == null) {
            if (other.appId != null)
                return false;
        }
        else if (!appId.equals(other.appId))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (listenerPort == null) {
            if (other.listenerPort != null)
                return false;
        }
        else if (!listenerPort.equals(other.listenerPort))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.appId == null) ? 0 : this.appId.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.listenerPort == null) ? 0 : this.listenerPort.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Game (");

        sb.append(appId);
        sb.append(", ").append(name);
        sb.append(", ").append(listenerPort);

        sb.append(")");
        return sb.toString();
    }
}
