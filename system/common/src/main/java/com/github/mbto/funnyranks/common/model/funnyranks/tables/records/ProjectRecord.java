/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks.tables.records;


import com.github.mbto.funnyranks.common.model.funnyranks.enums.ProjectDatabaseServerTimezone;
import com.github.mbto.funnyranks.common.model.funnyranks.enums.ProjectLanguage;
import com.github.mbto.funnyranks.common.model.funnyranks.enums.ProjectMergeType;
import com.github.mbto.funnyranks.common.model.funnyranks.tables.Project;

import java.time.LocalDateTime;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record11<UInteger, String, String, ProjectLanguage, ProjectMergeType, LocalDateTime, String, String, String, String, ProjectDatabaseServerTimezone> {

    private static final long serialVersionUID = -1973279252;

    /**
     * Setter for <code>funnyranks.project.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>funnyranks.project.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>funnyranks.project.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>funnyranks.project.name</code>.
     */
    @NotNull
    @Size(max = 45)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>funnyranks.project.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>funnyranks.project.description</code>.
     */
    @Size(max = 65535)
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>funnyranks.project.language</code>. Language affects to country name in player_ip table (from MaxMind GeoLite2 database)
     */
    public void setLanguage(ProjectLanguage value) {
        set(3, value);
    }

    /**
     * Getter for <code>funnyranks.project.language</code>. Language affects to country name in player_ip table (from MaxMind GeoLite2 database)
     */
    public ProjectLanguage getLanguage() {
        return (ProjectLanguage) get(3);
    }

    /**
     * Setter for <code>funnyranks.project.merge_type</code>.
     */
    public void setMergeType(ProjectMergeType value) {
        set(4, value);
    }

    /**
     * Getter for <code>funnyranks.project.merge_type</code>.
     */
    public ProjectMergeType getMergeType() {
        return (ProjectMergeType) get(4);
    }

    /**
     * Setter for <code>funnyranks.project.reg_datetime</code>.
     */
    public void setRegDatetime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>funnyranks.project.reg_datetime</code>.
     */
    public LocalDateTime getRegDatetime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>funnyranks.project.database_hostport</code>.
     */
    public void setDatabaseHostport(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>funnyranks.project.database_hostport</code>.
     */
    @NotNull
    @Size(max = 260)
    public String getDatabaseHostport() {
        return (String) get(6);
    }

    /**
     * Setter for <code>funnyranks.project.database_schema</code>.
     */
    public void setDatabaseSchema(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>funnyranks.project.database_schema</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getDatabaseSchema() {
        return (String) get(7);
    }

    /**
     * Setter for <code>funnyranks.project.database_username</code>.
     */
    public void setDatabaseUsername(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>funnyranks.project.database_username</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getDatabaseUsername() {
        return (String) get(8);
    }

    /**
     * Setter for <code>funnyranks.project.database_password</code>.
     */
    public void setDatabasePassword(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>funnyranks.project.database_password</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getDatabasePassword() {
        return (String) get(9);
    }

    /**
     * Setter for <code>funnyranks.project.database_server_timezone</code>.
     */
    public void setDatabaseServerTimezone(ProjectDatabaseServerTimezone value) {
        set(10, value);
    }

    /**
     * Getter for <code>funnyranks.project.database_server_timezone</code>.
     */
    @NotNull
    public ProjectDatabaseServerTimezone getDatabaseServerTimezone() {
        return (ProjectDatabaseServerTimezone) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<UInteger, String, String, ProjectLanguage, ProjectMergeType, LocalDateTime, String, String, String, String, ProjectDatabaseServerTimezone> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row11<UInteger, String, String, ProjectLanguage, ProjectMergeType, LocalDateTime, String, String, String, String, ProjectDatabaseServerTimezone> valuesRow() {
        return (Row11) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Project.PROJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Project.PROJECT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Project.PROJECT.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ProjectLanguage> field4() {
        return Project.PROJECT.LANGUAGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ProjectMergeType> field5() {
        return Project.PROJECT.MERGE_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field6() {
        return Project.PROJECT.REG_DATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Project.PROJECT.DATABASE_HOSTPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Project.PROJECT.DATABASE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field9() {
        return Project.PROJECT.DATABASE_USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field10() {
        return Project.PROJECT.DATABASE_PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ProjectDatabaseServerTimezone> field11() {
        return Project.PROJECT.DATABASE_SERVER_TIMEZONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectLanguage component4() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectMergeType component5() {
        return getMergeType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component6() {
        return getRegDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDatabaseHostport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDatabaseSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component9() {
        return getDatabaseUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component10() {
        return getDatabasePassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDatabaseServerTimezone component11() {
        return getDatabaseServerTimezone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectLanguage value4() {
        return getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectMergeType value5() {
        return getMergeType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value6() {
        return getRegDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDatabaseHostport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDatabaseSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value9() {
        return getDatabaseUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value10() {
        return getDatabasePassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDatabaseServerTimezone value11() {
        return getDatabaseServerTimezone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value4(ProjectLanguage value) {
        setLanguage(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value5(ProjectMergeType value) {
        setMergeType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value6(LocalDateTime value) {
        setRegDatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value7(String value) {
        setDatabaseHostport(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value8(String value) {
        setDatabaseSchema(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value9(String value) {
        setDatabaseUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value10(String value) {
        setDatabasePassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value11(ProjectDatabaseServerTimezone value) {
        setDatabaseServerTimezone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord values(UInteger value1, String value2, String value3, ProjectLanguage value4, ProjectMergeType value5, LocalDateTime value6, String value7, String value8, String value9, String value10, ProjectDatabaseServerTimezone value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(UInteger id, String name, String description, ProjectLanguage language, ProjectMergeType mergeType, LocalDateTime regDatetime, String databaseHostport, String databaseSchema, String databaseUsername, String databasePassword, ProjectDatabaseServerTimezone databaseServerTimezone) {
        super(Project.PROJECT);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, language);
        set(4, mergeType);
        set(5, regDatetime);
        set(6, databaseHostport);
        set(7, databaseSchema);
        set(8, databaseUsername);
        set(9, databasePassword);
        set(10, databaseServerTimezone);
    }
}
