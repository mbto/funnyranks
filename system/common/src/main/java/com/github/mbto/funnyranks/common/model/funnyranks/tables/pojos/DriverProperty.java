/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks.tables.pojos;


import java.io.Serializable;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.types.UInteger;


/**
 * Additional JDBC driver connection properties https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-configuration-properties.html
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DriverProperty implements Serializable {

    private static final long serialVersionUID = 1267910874;

    private UInteger id;
    private UInteger projectId;
    private String   key;
    private String   value;

    public DriverProperty() {}

    public DriverProperty(DriverProperty value) {
        this.id = value.id;
        this.projectId = value.projectId;
        this.key = value.key;
        this.value = value.value;
    }

    public DriverProperty(
        UInteger id,
        UInteger projectId,
        String   key,
        String   value
    ) {
        this.id = id;
        this.projectId = projectId;
        this.key = key;
        this.value = value;
    }

    public UInteger getId() {
        return this.id;
    }

    public void setId(UInteger id) {
        this.id = id;
    }

    @NotNull
    public UInteger getProjectId() {
        return this.projectId;
    }

    public void setProjectId(UInteger projectId) {
        this.projectId = projectId;
    }

    @NotNull
    @Size(max = 255)
    public String getKey() {
        return this.key;
    }

    public void setKey(String key) {
        this.key = key;
    }

    @NotNull
    @Size(max = 255)
    public String getValue() {
        return this.value;
    }

    public void setValue(String value) {
        this.value = value;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DriverProperty other = (DriverProperty) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (projectId == null) {
            if (other.projectId != null)
                return false;
        }
        else if (!projectId.equals(other.projectId))
            return false;
        if (key == null) {
            if (other.key != null)
                return false;
        }
        else if (!key.equals(other.key))
            return false;
        if (value == null) {
            if (other.value != null)
                return false;
        }
        else if (!value.equals(other.value))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.projectId == null) ? 0 : this.projectId.hashCode());
        result = prime * result + ((this.key == null) ? 0 : this.key.hashCode());
        result = prime * result + ((this.value == null) ? 0 : this.value.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DriverProperty (");

        sb.append(id);
        sb.append(", ").append(projectId);
        sb.append(", ").append(key);
        sb.append(", ").append(value);

        sb.append(")");
        return sb.toString();
    }
}
