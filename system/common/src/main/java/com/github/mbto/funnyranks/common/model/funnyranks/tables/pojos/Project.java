/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks.tables.pojos;


import com.github.mbto.funnyranks.common.model.funnyranks.enums.ProjectDatabaseServerTimezone;
import com.github.mbto.funnyranks.common.model.funnyranks.enums.ProjectLanguage;
import com.github.mbto.funnyranks.common.model.funnyranks.enums.ProjectMergeType;

import java.io.Serializable;
import java.time.LocalDateTime;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Project implements Serializable {

    private static final long serialVersionUID = 1255957155;

    private UInteger                      id;
    private String                        name;
    private String                        description;
    private ProjectLanguage               language;
    private ProjectMergeType              mergeType;
    private LocalDateTime                 regDatetime;
    private String                        databaseHostport;
    private String                        databaseSchema;
    private String                        databaseUsername;
    private String                        databasePassword;
    private ProjectDatabaseServerTimezone databaseServerTimezone;

    public Project() {}

    public Project(Project value) {
        this.id = value.id;
        this.name = value.name;
        this.description = value.description;
        this.language = value.language;
        this.mergeType = value.mergeType;
        this.regDatetime = value.regDatetime;
        this.databaseHostport = value.databaseHostport;
        this.databaseSchema = value.databaseSchema;
        this.databaseUsername = value.databaseUsername;
        this.databasePassword = value.databasePassword;
        this.databaseServerTimezone = value.databaseServerTimezone;
    }

    public Project(
        UInteger                      id,
        String                        name,
        String                        description,
        ProjectLanguage               language,
        ProjectMergeType              mergeType,
        LocalDateTime                 regDatetime,
        String                        databaseHostport,
        String                        databaseSchema,
        String                        databaseUsername,
        String                        databasePassword,
        ProjectDatabaseServerTimezone databaseServerTimezone
    ) {
        this.id = id;
        this.name = name;
        this.description = description;
        this.language = language;
        this.mergeType = mergeType;
        this.regDatetime = regDatetime;
        this.databaseHostport = databaseHostport;
        this.databaseSchema = databaseSchema;
        this.databaseUsername = databaseUsername;
        this.databasePassword = databasePassword;
        this.databaseServerTimezone = databaseServerTimezone;
    }

    public UInteger getId() {
        return this.id;
    }

    public void setId(UInteger id) {
        this.id = id;
    }

    @NotNull
    @Size(max = 45)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Size(max = 65535)
    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public ProjectLanguage getLanguage() {
        return this.language;
    }

    public void setLanguage(ProjectLanguage language) {
        this.language = language;
    }

    public ProjectMergeType getMergeType() {
        return this.mergeType;
    }

    public void setMergeType(ProjectMergeType mergeType) {
        this.mergeType = mergeType;
    }

    public LocalDateTime getRegDatetime() {
        return this.regDatetime;
    }

    public void setRegDatetime(LocalDateTime regDatetime) {
        this.regDatetime = regDatetime;
    }

    @NotNull
    @Size(max = 260)
    public String getDatabaseHostport() {
        return this.databaseHostport;
    }

    public void setDatabaseHostport(String databaseHostport) {
        this.databaseHostport = databaseHostport;
    }

    @NotNull
    @Size(max = 64)
    public String getDatabaseSchema() {
        return this.databaseSchema;
    }

    public void setDatabaseSchema(String databaseSchema) {
        this.databaseSchema = databaseSchema;
    }

    @NotNull
    @Size(max = 32)
    public String getDatabaseUsername() {
        return this.databaseUsername;
    }

    public void setDatabaseUsername(String databaseUsername) {
        this.databaseUsername = databaseUsername;
    }

    @NotNull
    @Size(max = 32)
    public String getDatabasePassword() {
        return this.databasePassword;
    }

    public void setDatabasePassword(String databasePassword) {
        this.databasePassword = databasePassword;
    }

    @NotNull
    public ProjectDatabaseServerTimezone getDatabaseServerTimezone() {
        return this.databaseServerTimezone;
    }

    public void setDatabaseServerTimezone(ProjectDatabaseServerTimezone databaseServerTimezone) {
        this.databaseServerTimezone = databaseServerTimezone;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Project other = (Project) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (language == null) {
            if (other.language != null)
                return false;
        }
        else if (!language.equals(other.language))
            return false;
        if (mergeType == null) {
            if (other.mergeType != null)
                return false;
        }
        else if (!mergeType.equals(other.mergeType))
            return false;
        if (regDatetime == null) {
            if (other.regDatetime != null)
                return false;
        }
        else if (!regDatetime.equals(other.regDatetime))
            return false;
        if (databaseHostport == null) {
            if (other.databaseHostport != null)
                return false;
        }
        else if (!databaseHostport.equals(other.databaseHostport))
            return false;
        if (databaseSchema == null) {
            if (other.databaseSchema != null)
                return false;
        }
        else if (!databaseSchema.equals(other.databaseSchema))
            return false;
        if (databaseUsername == null) {
            if (other.databaseUsername != null)
                return false;
        }
        else if (!databaseUsername.equals(other.databaseUsername))
            return false;
        if (databasePassword == null) {
            if (other.databasePassword != null)
                return false;
        }
        else if (!databasePassword.equals(other.databasePassword))
            return false;
        if (databaseServerTimezone == null) {
            if (other.databaseServerTimezone != null)
                return false;
        }
        else if (!databaseServerTimezone.equals(other.databaseServerTimezone))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.mergeType == null) ? 0 : this.mergeType.hashCode());
        result = prime * result + ((this.regDatetime == null) ? 0 : this.regDatetime.hashCode());
        result = prime * result + ((this.databaseHostport == null) ? 0 : this.databaseHostport.hashCode());
        result = prime * result + ((this.databaseSchema == null) ? 0 : this.databaseSchema.hashCode());
        result = prime * result + ((this.databaseUsername == null) ? 0 : this.databaseUsername.hashCode());
        result = prime * result + ((this.databasePassword == null) ? 0 : this.databasePassword.hashCode());
        result = prime * result + ((this.databaseServerTimezone == null) ? 0 : this.databaseServerTimezone.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Project (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(description);
        sb.append(", ").append(language);
        sb.append(", ").append(mergeType);
        sb.append(", ").append(regDatetime);
        sb.append(", ").append(databaseHostport);
        sb.append(", ").append(databaseSchema);
        sb.append(", ").append(databaseUsername);
        sb.append(", ").append(databasePassword);
        sb.append(", ").append(databaseServerTimezone);

        sb.append(")");
        return sb.toString();
    }
}
