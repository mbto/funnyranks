/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks_stats.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PlayerIp implements Serializable {

    private static final long serialVersionUID = -319724134;

    private UInteger      id;
    private UInteger      playerId;
    private UInteger      ip;
    private String        ip4;
    private String        countryName;
    private String        countryEmoji;
    private LocalDateTime regDatetime;

    public PlayerIp() {}

    public PlayerIp(PlayerIp value) {
        this.id = value.id;
        this.playerId = value.playerId;
        this.ip = value.ip;
        this.ip4 = value.ip4;
        this.countryName = value.countryName;
        this.countryEmoji = value.countryEmoji;
        this.regDatetime = value.regDatetime;
    }

    public PlayerIp(
        UInteger      id,
        UInteger      playerId,
        UInteger      ip,
        String        ip4,
        String        countryName,
        String        countryEmoji,
        LocalDateTime regDatetime
    ) {
        this.id = id;
        this.playerId = playerId;
        this.ip = ip;
        this.ip4 = ip4;
        this.countryName = countryName;
        this.countryEmoji = countryEmoji;
        this.regDatetime = regDatetime;
    }

    public UInteger getId() {
        return this.id;
    }

    public void setId(UInteger id) {
        this.id = id;
    }

    @NotNull
    public UInteger getPlayerId() {
        return this.playerId;
    }

    public void setPlayerId(UInteger playerId) {
        this.playerId = playerId;
    }

    @NotNull
    public UInteger getIp() {
        return this.ip;
    }

    public void setIp(UInteger ip) {
        this.ip = ip;
    }

    @Size(max = 15)
    public String getIp4() {
        return this.ip4;
    }

    public void setIp4(String ip4) {
        this.ip4 = ip4;
    }

    @Size(max = 50)
    public String getCountryName() {
        return this.countryName;
    }

    public void setCountryName(String countryName) {
        this.countryName = countryName;
    }

    @Size(max = 2)
    public String getCountryEmoji() {
        return this.countryEmoji;
    }

    public void setCountryEmoji(String countryEmoji) {
        this.countryEmoji = countryEmoji;
    }

    public LocalDateTime getRegDatetime() {
        return this.regDatetime;
    }

    public void setRegDatetime(LocalDateTime regDatetime) {
        this.regDatetime = regDatetime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PlayerIp other = (PlayerIp) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (playerId == null) {
            if (other.playerId != null)
                return false;
        }
        else if (!playerId.equals(other.playerId))
            return false;
        if (ip == null) {
            if (other.ip != null)
                return false;
        }
        else if (!ip.equals(other.ip))
            return false;
        if (ip4 == null) {
            if (other.ip4 != null)
                return false;
        }
        else if (!ip4.equals(other.ip4))
            return false;
        if (countryName == null) {
            if (other.countryName != null)
                return false;
        }
        else if (!countryName.equals(other.countryName))
            return false;
        if (countryEmoji == null) {
            if (other.countryEmoji != null)
                return false;
        }
        else if (!countryEmoji.equals(other.countryEmoji))
            return false;
        if (regDatetime == null) {
            if (other.regDatetime != null)
                return false;
        }
        else if (!regDatetime.equals(other.regDatetime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.playerId == null) ? 0 : this.playerId.hashCode());
        result = prime * result + ((this.ip == null) ? 0 : this.ip.hashCode());
        result = prime * result + ((this.ip4 == null) ? 0 : this.ip4.hashCode());
        result = prime * result + ((this.countryName == null) ? 0 : this.countryName.hashCode());
        result = prime * result + ((this.countryEmoji == null) ? 0 : this.countryEmoji.hashCode());
        result = prime * result + ((this.regDatetime == null) ? 0 : this.regDatetime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PlayerIp (");

        sb.append(id);
        sb.append(", ").append(playerId);
        sb.append(", ").append(ip);
        sb.append(", ").append(ip4);
        sb.append(", ").append(countryName);
        sb.append(", ").append(countryEmoji);
        sb.append(", ").append(regDatetime);

        sb.append(")");
        return sb.toString();
    }
}
