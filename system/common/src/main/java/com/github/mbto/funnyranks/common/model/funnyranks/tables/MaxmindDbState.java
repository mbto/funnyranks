/*
 * This file is generated by jOOQ.
 */
package com.github.mbto.funnyranks.common.model.funnyranks.tables;


import com.github.mbto.funnyranks.common.model.funnyranks.Funnyranks;
import com.github.mbto.funnyranks.common.model.funnyranks.tables.records.MaxmindDbStateRecord;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * Leave or remove a link for enable/disable auto-updating GeoLite2 country 
 * database:
 * https://github.com/mbto/public_keeper/raw/master/funnyranks/country_en_ru.zip
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MaxmindDbState extends TableImpl<MaxmindDbStateRecord> {

    private static final long serialVersionUID = -674368114;

    /**
     * The reference instance of <code>funnyranks.maxmind_db_state</code>
     */
    public static final MaxmindDbState MAXMIND_DB_STATE = new MaxmindDbState();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MaxmindDbStateRecord> getRecordType() {
        return MaxmindDbStateRecord.class;
    }

    /**
     * The column <code>funnyranks.maxmind_db_state.date</code>.
     */
    public final TableField<MaxmindDbStateRecord, LocalDate> DATE = createField("date", org.jooq.impl.SQLDataType.LOCALDATE, this, "");

    /**
     * The column <code>funnyranks.maxmind_db_state.size</code>.
     */
    public final TableField<MaxmindDbStateRecord, UInteger> SIZE = createField("size", org.jooq.impl.SQLDataType.INTEGERUNSIGNED, this, "");

    /**
     * Create a <code>funnyranks.maxmind_db_state</code> table reference
     */
    public MaxmindDbState() {
        this(DSL.name("maxmind_db_state"), null);
    }

    /**
     * Create an aliased <code>funnyranks.maxmind_db_state</code> table reference
     */
    public MaxmindDbState(String alias) {
        this(DSL.name(alias), MAXMIND_DB_STATE);
    }

    /**
     * Create an aliased <code>funnyranks.maxmind_db_state</code> table reference
     */
    public MaxmindDbState(Name alias) {
        this(alias, MAXMIND_DB_STATE);
    }

    private MaxmindDbState(Name alias, Table<MaxmindDbStateRecord> aliased) {
        this(alias, aliased, null);
    }

    private MaxmindDbState(Name alias, Table<MaxmindDbStateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("Leave or remove a link for enable/disable auto-updating GeoLite2 country database:\r\nhttps://github.com/mbto/public_keeper/raw/master/funnyranks/country_en_ru.zip"));
    }

    public <O extends Record> MaxmindDbState(Table<O> child, ForeignKey<O, MaxmindDbStateRecord> key) {
        super(child, key, MAXMIND_DB_STATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Funnyranks.FUNNYRANKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MaxmindDbState as(String alias) {
        return new MaxmindDbState(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MaxmindDbState as(Name alias) {
        return new MaxmindDbState(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MaxmindDbState rename(String name) {
        return new MaxmindDbState(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MaxmindDbState rename(Name name) {
        return new MaxmindDbState(name, null);
    }
}
