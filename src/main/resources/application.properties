# https://github.com/mbto/funnyranks/

#logging.level.root=DEBUG

# jooq sql queries logging level
logging.level.org.jooq.tools.LoggerListener=INFO
# funnyranks logging level
logging.level.com.github.mbto.funnyranks=INFO

# Hosting-wide funnyranks broker name
funnyranks.broker.name=broker_1

# JDBC Connection URL Syntax: https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-jdbc-url-format.html
# Available properties: https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-reference-configuration-properties.html
funnyranks.datasource.jdbcUrl=jdbc:mysql://127.0.0.1:3306/
funnyranks.datasource.username=funnyranks
funnyranks.datasource.password=funnyranks

# If you don't have default timezone in MySQL settings (my.ini, my.cnf, mysqld.cnf, etc...) in [mysqld] section
# Example:
# [mysqld]
# default-time-zone='+03:00' # or your time zone
#
# you can uncomment this property, and set a your timezone, to prevent an exception:
#	Caused by: com.mysql.cj.exceptions.InvalidConnectionAttributeException: The server time
#	zone value 'RTZ 2 (????)' is unrecognized or represents more than one time zone. You must
#	configure either the server or JDBC driver (via the 'serverTimezone' configuration property)
# Examples:
#funnyranks.datasource.dataSourceProperties.serverTimezone=Europe/Moscow
#funnyranks.datasource.dataSourceProperties.serverTimezone=UTC

# Set other connection properties, if JDBC driver have problems with connection to MySQL:
# Example:
#funnyranks.datasource.dataSourceProperties.allowPublicKeyRetrieval=true
#funnyranks.datasource.dataSourceProperties.useSSL=false

# Maximum number of database connections in the pool.
# Pool used in frontend admin panel AND when funnyranks merging players into the funnyranks_stats.* tables.
# Depends on number of users frontend admin panel
#	AND property max_connections=151 (151 is default: https://dev.mysql.com/doc/refman/8.0/en/too-many-connections.html )
#		in MySQL settings (my.ini, my.cnf, mysqld.cnf, etc...) in [mysqld] section.
# This setting means the number of concurrent SQL transactions per second available to the funnyranks
# in regard to `funnyranks` database
funnyranks.datasource.maximumPoolSize=10

# The property controls the minimum number of idle connections that HikariCP tries to maintain in the pool,
# including both idle and in-use connections. If the idle connections dip below this value, HikariCP will make
# a best effort to restore them quickly and efficiently
funnyranks.datasource.minimumIdle=10

# Set the maximum number of milliseconds that a client will wait for a connection from the pool. If this time is exceeded
# without a connection becoming available, a SQLException will be thrown from javax.sql.DataSource.getConnection().
# Default 30sec: 30 * 1000
funnyranks.datasource.connectionTimeout=30000

# Sets the maximum number of milliseconds that the pool will wait for a connection to be validated as alive
# Default 5sec: 5 * 1000
funnyranks.datasource.validationTimeout=5000

# This property controls the maximum amount of time (in milliseconds) that a connection is allowed to sit idle in
# the pool. Whether a connection is retired as idle or not is subject to a maximum variation of +30 seconds, and
# average variation of +15 seconds. A connection will never be retired as idle before this timeout.
# A value of 0 means that idle connections are never removed from the pool.
# Default 10min: 10 * 60 * 1000
funnyranks.datasource.idleTimeout=600000

# This property controls the maximum lifetime of a connection in the pool. When a connection reaches this timeout,
# even if recently used, it will be retired from the pool. An in-use connection will never be retired, only when
# it is idle will it be removed.
# Default 30min: 30 * 60 * 1000
funnyranks.datasource.maxLifetime=1800000

# Tuning performance and other properties: https://docs.spring.io/spring-boot/docs/2.1.12.RELEASE/reference/html/common-application-properties.html
# Context path of the frontend admin panel, ending with /
# Example:
#	server.servlet.context-path=/somepath/ then frontend admin panel URL will be http://ip:port/somepath/
# Default is "/" will be http://ip:port/
server.servlet.context-path=/
# Server HTTP TCP port.
server.port=8080
# Maximum number of connections that the server accepts and processes at any given time.
server.tomcat.max-connections=10000
# Maximum size of the HTTP post content.
server.tomcat.max-http-form-post-size=2MB
# Maximum amount of request body to swallow.
server.tomcat.max-swallow-size=2MB
# Maximum amount of worker threads.
server.tomcat.max-threads=200
# Minimum amount of worker threads.
server.tomcat.min-spare-threads=2